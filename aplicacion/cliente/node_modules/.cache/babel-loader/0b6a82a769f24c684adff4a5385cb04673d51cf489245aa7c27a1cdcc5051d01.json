{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xC1ngel\\\\Desktop\\\\proyecto-insene\\\\aplicacion\\\\cliente\\\\src\\\\pages\\\\Formulario.jsx\",\n  _s = $RefreshSig$();\n//importamos el css\nimport '../styles/Formulario.css';\n// importamos los Estados para poder obtener los valores introducidos por el usuario\nimport { useState } from \"react\";\n// importamos Axios, nos permite hacer sencillas las operaciones como cliente HTTP\nimport Axios from \"axios\";\n// importamos el componente EnradaTexto, EntradaTextoArea y EntradaRadio\nimport { EntradaTexto, EntradaTextoArea, EntradaRadio } from '../components/CamposFormulario';\n// importamos sweetalert2\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Formulario() {\n  _s();\n  // creamos las constantes para obtener los valores de los campos del formulario\n  const datosInicialesFormulario = {\n    idTrabajador: 0,\n    nombreContacto: \"\",\n    telefonoContacto: \"\",\n    correoContacto: \"\",\n    observacionesContacto: \"\",\n    direccionContacto: \"\",\n    localidadContacto: \"\",\n    provinciaContacto: \"\",\n    fechaVisita: \"\",\n    horaVisita: \"\",\n    numeroPersonas: 0,\n    numeroDecisores: 0,\n    tieneBombona: \"Sin datos\",\n    tieneGas: \"Sin datos\",\n    tieneTermoElectrico: \"Sin datos\",\n    tienePlacasTermicas: \"Sin datos\",\n    importeLuz: 0,\n    importeGas: 0\n  };\n  const opcionesRadio = [{\n    value: \"Si\",\n    label: \"Sí\"\n  }, {\n    value: \"No\",\n    label: \"No\"\n  }, {\n    value: \"Sin datos\",\n    label: \"Sin datos\"\n  }];\n\n  // creamos las constantes para obtener los valores de los campos del formulario\n  const [datosFormulario, setDatosFormulario] = useState(datosInicialesFormulario);\n\n  // creamos las constantes para los errores\n  const [errores, setErrores] = useState({});\n\n  // validaciones de los campos\n  const validaciones = {\n    idTrabajador: valor => !valor || isNaN(valor) || valor <= 0 ? \"Este campo es obligatorio y debe ser mayor a 0\" : null,\n    nombreContacto: valor => !valor ? \"Este campo es obligatorio\" : null,\n    telefonoContacto: valor => !valor || !/^\\d{9}$/.test(valor) ? \"Este campo es obligatorio y debe tener 9 digitos\" : null,\n    correoContacto: valor => !valor || !/\\S+@\\S+\\.\\S+/.test(valor) ? \"El correo no es válido\" : null,\n    direccionContacto: valor => !valor ? \"Este campo es obligatorio\" : null,\n    localidadContacto: valor => !valor ? \"Este campo es obligatorio\" : null,\n    provinciaContacto: valor => !valor ? \"Este campo es obligatorio\" : null,\n    fechaVisita: valor => !valor ? \"Este campo es obligatorio\" : null,\n    horaVisita: valor => !valor ? \"Este campo es obligatorio\" : null,\n    numeroPersonas: valor => isNaN(valor) || valor < 0 ? \"El número de personas debe ser un número positivo\" : null,\n    numeroDecisores: valor => !valor || isNaN(valor) || valor < 0 ? \"Este campo es obligatorio y debe ser mayor a 0\" : null,\n    importeLuz: valor => isNaN(valor) || valor < 0 ? \"El importe debe ser un número positivo\" : null,\n    importeGas: valor => isNaN(valor) || valor < 0 ? \"El importe debe ser un número positivo\" : null\n  };\n\n  // validamos los campos individualmente\n  const validarCampo = (campo, valor) => {\n    var _validaciones$campo;\n    const error = (_validaciones$campo = validaciones[campo]) === null || _validaciones$campo === void 0 ? void 0 : _validaciones$campo.call(validaciones, valor);\n    setErrores(prevState => ({\n      ...prevState,\n      [campo]: error\n    }));\n  };\n\n  // manejamos los cambios en los campos del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // actualizamos solo las propiedades que han cambiado\n    setDatosFormulario(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    validarCampo(name, value);\n  };\n\n  // validamos los campos\n  const validar = () => {\n    const nuevoError = {};\n    Object.keys(validaciones).forEach(campo => {\n      const error = validaciones[campo](datosFormulario[campo]);\n      if (error) nuevoError[campo] = error;\n    });\n    setErrores(nuevoError);\n    if (Object.keys(nuevoError).length > 0) {\n      // mostrar que hay errores\n      Swal.fire({\n        icon: \"error\",\n        title: \"Error\",\n        text: \"Hay algunos campos con errores en el formulario\",\n        confirmButtonText: \"Vale\"\n      });\n    }\n\n    // si no hay errores devolvemos true\n    return Object.keys(nuevoError).length === 0;\n  };\n\n  // metodo para crear clientes\n  const addFormulario = e => {\n    e.preventDefault();\n    if (validar()) {\n      // Intentamos enviar los datos\n      Axios.post(\"http://localhost:3001/registrarCliente\", datosFormulario).then(response => {\n        console.log(\"Datos enviados al servidor correctamente:\", response);\n        setErrores({});\n        Swal.fire({\n          icon: \"success\",\n          title: `El código es: ${response.data.idVivienda}`,\n          text: \"Datos registrados correctamente\",\n          confirmButtonText: \"Vale\"\n        });\n\n        // Vaciamos los campos después de enviar los datos\n        setDatosFormulario(datosInicialesFormulario);\n\n        // Limpiamos los datos almacenados en caso de éxito\n        localStorage.removeItem('datosFormulario');\n      }).catch(error => {\n        if (error.message && error.message.includes('Network Error')) {\n          // Guardamos los datos localmente en caso de error de conexión\n          localStorage.setItem('datosFormulario', JSON.stringify(datosFormulario));\n          Swal.fire({\n            icon: \"error\",\n            title: \"Error de Conexión\",\n            text: \"No se pudo conectar con la base de datos. Los datos se guardaron localmente. Intenta enviar los datos más tarde.\",\n            confirmButtonText: \"Intentar más tarde\"\n          });\n        } else {\n          // Otros errores de servidor o solicitud\n          Swal.fire({\n            icon: \"error\",\n            title: \"Error\",\n            text: \"Hubo un problema con la solicitud. Inténtalo de nuevo más tarde.\",\n            confirmButtonText: \"Vale\"\n          });\n        }\n      });\n    }\n  };\n\n  // Puedes crear un efecto para comprobar si los datos están almacenados y permitir que el usuario los envíe más tarde\n  useEffect(() => {\n    const datosGuardados = localStorage.getItem('datosFormulario');\n    if (datosGuardados) {\n      const datos = JSON.parse(datosGuardados);\n      Swal.fire({\n        icon: \"info\",\n        title: \"Datos guardados\",\n        text: \"Parece que hubo un problema de conexión antes. ¿Deseas enviar los datos ahora?\",\n        showCancelButton: true,\n        confirmButtonText: \"Enviar ahora\",\n        cancelButtonText: \"Cancelar\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          // Si el usuario acepta, enviamos los datos\n          Axios.post(\"http://localhost:3001/registrarCliente\", datos).then(response => {\n            Swal.fire({\n              icon: \"success\",\n              title: \"Datos enviados\",\n              text: \"Tus datos han sido enviados correctamente.\",\n              confirmButtonText: \"Vale\"\n            });\n\n            // Limpiar los datos almacenados\n            localStorage.removeItem('datosFormulario');\n          }).catch(error => {\n            Swal.fire({\n              icon: \"error\",\n              title: \"Error al enviar\",\n              text: \"Hubo un problema al intentar enviar los datos nuevamente. Intenta más tarde.\",\n              confirmButtonText: \"Vale\"\n            });\n          });\n        }\n      });\n    }\n  }, []);\n\n  // este es el html visible en la web\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Contactos y Visitas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedorFormulario\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addFormulario,\n        className: \"campos\",\n        children: [errores.serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorServidor\",\n          children: errores.serverError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"ID Trabajador\",\n          name: \"idTrabajador\",\n          value: datosFormulario.idTrabajador,\n          onChange: handleChange,\n          type: \"number\",\n          placeholder: \"Ej: 1\",\n          error: errores.idTrabajador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Nombre completo del contacto\",\n          name: \"nombreContacto\",\n          value: datosFormulario.nombreContacto,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Ej: Gabriel Mart\\xEDn Ruiz\",\n          error: errores.nombreContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Direcci\\xF3n del contacto\",\n          name: \"direccionContacto\",\n          value: datosFormulario.direccionContacto,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Ej: Calle del Sol, 42\",\n          error: errores.direccionContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Localidad del contacto\",\n          name: \"localidadContacto\",\n          value: datosFormulario.localidadContacto,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Ej: Mairena de Alcor\",\n          error: errores.localidadContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Provincia del contacto\",\n          name: \"provinciaContacto\",\n          value: datosFormulario.provinciaContacto,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Ej: Sevilla\",\n          error: errores.provinciaContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Tel\\xE9fono de contacto\",\n          name: \"telefonoContacto\",\n          value: datosFormulario.telefonoContacto,\n          onChange: handleChange,\n          type: \"tel\",\n          placeholder: \"Ej: 666555444\",\n          error: errores.telefonoContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Correo del contacto\",\n          name: \"correoContacto\",\n          value: datosFormulario.correoContacto,\n          onChange: handleChange,\n          type: \"email\",\n          placeholder: \"Ej: ejemplo@gmail.com\",\n          error: errores.correoContacto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Fecha de la visita\",\n          name: \"fechaVisita\",\n          value: datosFormulario.fechaVisita,\n          onChange: handleChange,\n          type: \"date\",\n          placeholder: \"Ej: 17/01/2025\",\n          error: errores.fechaVisita\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Hora de la visita\",\n          name: \"horaVisita\",\n          value: datosFormulario.horaVisita,\n          onChange: handleChange,\n          type: \"time\",\n          placeholder: \"Ej: 10:22\",\n          error: errores.horaVisita\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"N\\xFAmero de personas en la vivienda\",\n          name: \"numeroPersonas\",\n          value: datosFormulario.numeroPersonas,\n          onChange: handleChange,\n          type: \"number\",\n          placeholder: \"Ej: 4\",\n          error: errores.numeroPersonas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"N\\xFAmero de decisores\",\n          name: \"numeroDecisores\",\n          value: datosFormulario.numeroDecisores,\n          onChange: handleChange,\n          type: \"number\",\n          placeholder: \"Ej: 2\",\n          error: errores.numeroDecisores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaRadio, {\n          label: \"\\xBFTiene bombona?\",\n          name: \"tieneBombona\",\n          options: opcionesRadio,\n          value: datosFormulario.tieneBombona,\n          onChange: handleChange,\n          error: errores.tieneBombona\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaRadio, {\n          label: \"\\xBFTiene gas?\",\n          name: \"tieneGas\",\n          options: opcionesRadio,\n          value: datosFormulario.tieneGas,\n          onChange: handleChange,\n          error: errores.tieneGas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaRadio, {\n          label: \"\\xBFTiene termo el\\xE9ctrico?\",\n          name: \"tieneTermoElectrico\",\n          options: opcionesRadio,\n          value: datosFormulario.tieneTermoElectrico,\n          onChange: handleChange,\n          error: errores.tieneTermoElectrico\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaRadio, {\n          label: \"\\xBFTiene placas t\\xE9rmicas?\",\n          name: \"tienePlacasTermicas\",\n          options: opcionesRadio,\n          value: datosFormulario.tienePlacasTermicas,\n          onChange: handleChange,\n          error: errores.tienePlacasTermicas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Importe de recibo de luz\",\n          name: \"importeLuz\",\n          value: datosFormulario.importeLuz,\n          onChange: handleChange,\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Ej: 45,50\",\n          error: errores.importeLuz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTexto, {\n          label: \"Importe de recibo de gas\",\n          name: \"importeGas\",\n          value: datosFormulario.importeGas,\n          onChange: handleChange,\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Ej: 30,00\",\n          error: errores.importeGas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EntradaTextoArea, {\n          label: \"Observaciones del contacto\",\n          name: \"observacionesContacto\",\n          value: datosFormulario.observacionesContacto,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Comenta alguna observaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Registrar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n_s(Formulario, \"G0yUEZ1WT6qkchIbkWoWEwmGIRQ=\");\n_c = Formulario;\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["useState","Axios","EntradaTexto","EntradaTextoArea","EntradaRadio","Swal","jsxDEV","_jsxDEV","Formulario","_s","datosInicialesFormulario","idTrabajador","nombreContacto","telefonoContacto","correoContacto","observacionesContacto","direccionContacto","localidadContacto","provinciaContacto","fechaVisita","horaVisita","numeroPersonas","numeroDecisores","tieneBombona","tieneGas","tieneTermoElectrico","tienePlacasTermicas","importeLuz","importeGas","opcionesRadio","value","label","datosFormulario","setDatosFormulario","errores","setErrores","validaciones","valor","isNaN","test","validarCampo","campo","_validaciones$campo","error","call","prevState","handleChange","e","name","target","validar","nuevoError","Object","keys","forEach","length","fire","icon","title","text","confirmButtonText","addFormulario","preventDefault","post","then","response","console","log","data","idVivienda","localStorage","removeItem","catch","message","includes","setItem","JSON","stringify","useEffect","datosGuardados","getItem","datos","parse","showCancelButton","cancelButtonText","result","isConfirmed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","serverError","onChange","type","placeholder","options","step","_c","$RefreshReg$"],"sources":["C:/Users/Ángel/Desktop/proyecto-insene/aplicacion/cliente/src/pages/Formulario.jsx"],"sourcesContent":["//importamos el css\r\nimport '../styles/Formulario.css';\r\n// importamos los Estados para poder obtener los valores introducidos por el usuario\r\nimport { useState } from \"react\";\r\n// importamos Axios, nos permite hacer sencillas las operaciones como cliente HTTP\r\nimport Axios from \"axios\";\r\n// importamos el componente EnradaTexto, EntradaTextoArea y EntradaRadio\r\nimport { EntradaTexto, EntradaTextoArea, EntradaRadio } from '../components/CamposFormulario';\r\n// importamos sweetalert2\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Formulario() {\r\n    // creamos las constantes para obtener los valores de los campos del formulario\r\n    const datosInicialesFormulario = {\r\n        idTrabajador: 0,\r\n        nombreContacto: \"\",\r\n        telefonoContacto: \"\",\r\n        correoContacto: \"\",\r\n        observacionesContacto: \"\",\r\n        direccionContacto: \"\",\r\n        localidadContacto: \"\",\r\n        provinciaContacto: \"\",\r\n        fechaVisita: \"\",\r\n        horaVisita: \"\",\r\n        numeroPersonas: 0,\r\n        numeroDecisores: 0,\r\n        tieneBombona: \"Sin datos\",\r\n        tieneGas: \"Sin datos\",\r\n        tieneTermoElectrico: \"Sin datos\",\r\n        tienePlacasTermicas: \"Sin datos\",\r\n        importeLuz: 0,\r\n        importeGas: 0\r\n    };\r\n\r\n    const opcionesRadio = [\r\n        { value: \"Si\", label: \"Sí\" },\r\n        { value: \"No\", label: \"No\" },\r\n        { value: \"Sin datos\", label: \"Sin datos\" }\r\n    ];\r\n\r\n    // creamos las constantes para obtener los valores de los campos del formulario\r\n    const [datosFormulario, setDatosFormulario] = useState(datosInicialesFormulario);\r\n\r\n    // creamos las constantes para los errores\r\n    const [errores, setErrores] = useState({});\r\n\r\n    // validaciones de los campos\r\n    const validaciones = {\r\n        idTrabajador: (valor) => (!valor || isNaN(valor) || valor <= 0) ? \"Este campo es obligatorio y debe ser mayor a 0\" : null,\r\n        nombreContacto: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        telefonoContacto: (valor) => (!valor || !/^\\d{9}$/.test(valor)) ? \"Este campo es obligatorio y debe tener 9 digitos\" : null,\r\n        correoContacto: (valor) => (!valor || !/\\S+@\\S+\\.\\S+/.test(valor)) ? \"El correo no es válido\" : null,\r\n        direccionContacto: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        localidadContacto: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        provinciaContacto: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        fechaVisita: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        horaVisita: (valor) => !valor ? \"Este campo es obligatorio\" : null,\r\n        numeroPersonas: (valor) => (isNaN(valor) || valor < 0) ? \"El número de personas debe ser un número positivo\" : null,\r\n        numeroDecisores: (valor) => (!valor || isNaN(valor) || valor < 0) ? \"Este campo es obligatorio y debe ser mayor a 0\" : null,\r\n        importeLuz: (valor) => (isNaN(valor) || valor < 0) ? \"El importe debe ser un número positivo\" : null,\r\n        importeGas: (valor) => (isNaN(valor) || valor < 0) ? \"El importe debe ser un número positivo\" : null,\r\n    };\r\n\r\n    // validamos los campos individualmente\r\n    const validarCampo = (campo, valor) => {\r\n        const error = validaciones[campo]?.(valor);\r\n        setErrores(prevState => ({\r\n            ...prevState,\r\n            [campo]: error\r\n        }));\r\n    };\r\n\r\n    // manejamos los cambios en los campos del formulario\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // actualizamos solo las propiedades que han cambiado\r\n        setDatosFormulario(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        validarCampo(name, value);\r\n    };\r\n\r\n    // validamos los campos\r\n    const validar = () => {\r\n        const nuevoError = {};\r\n        Object.keys(validaciones).forEach(campo => {\r\n            const error = validaciones[campo](datosFormulario[campo]);\r\n            if (error) nuevoError[campo] = error;\r\n        });\r\n        setErrores(nuevoError);\r\n\r\n        if (Object.keys(nuevoError).length > 0) {\r\n            // mostrar que hay errores\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Error\",\r\n                text: \"Hay algunos campos con errores en el formulario\",\r\n                confirmButtonText: \"Vale\"\r\n            });\r\n        }\r\n\r\n        // si no hay errores devolvemos true\r\n        return Object.keys(nuevoError).length === 0;\r\n    };\r\n\r\n    // metodo para crear clientes\r\n    const addFormulario = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (validar()) {\r\n            // Intentamos enviar los datos\r\n            Axios.post(\"http://localhost:3001/registrarCliente\", datosFormulario)\r\n                .then((response) => {\r\n                    console.log(\"Datos enviados al servidor correctamente:\", response);\r\n                    setErrores({});\r\n    \r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: `El código es: ${response.data.idVivienda}`,\r\n                        text: \"Datos registrados correctamente\",\r\n                        confirmButtonText: \"Vale\"\r\n                    });\r\n    \r\n                    // Vaciamos los campos después de enviar los datos\r\n                    setDatosFormulario(datosInicialesFormulario);\r\n    \r\n                    // Limpiamos los datos almacenados en caso de éxito\r\n                    localStorage.removeItem('datosFormulario');\r\n                })\r\n                .catch((error) => {\r\n                    if (error.message && error.message.includes('Network Error')) {\r\n                        // Guardamos los datos localmente en caso de error de conexión\r\n                        localStorage.setItem('datosFormulario', JSON.stringify(datosFormulario));\r\n    \r\n                        Swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"Error de Conexión\",\r\n                            text: \"No se pudo conectar con la base de datos. Los datos se guardaron localmente. Intenta enviar los datos más tarde.\",\r\n                            confirmButtonText: \"Intentar más tarde\"\r\n                        });\r\n                    } else {\r\n                        // Otros errores de servidor o solicitud\r\n                        Swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"Error\",\r\n                            text: \"Hubo un problema con la solicitud. Inténtalo de nuevo más tarde.\",\r\n                            confirmButtonText: \"Vale\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n    \r\n    // Puedes crear un efecto para comprobar si los datos están almacenados y permitir que el usuario los envíe más tarde\r\n    useEffect(() => {\r\n        const datosGuardados = localStorage.getItem('datosFormulario');\r\n        if (datosGuardados) {\r\n            const datos = JSON.parse(datosGuardados);\r\n    \r\n            Swal.fire({\r\n                icon: \"info\",\r\n                title: \"Datos guardados\",\r\n                text: \"Parece que hubo un problema de conexión antes. ¿Deseas enviar los datos ahora?\",\r\n                showCancelButton: true,\r\n                confirmButtonText: \"Enviar ahora\",\r\n                cancelButtonText: \"Cancelar\"\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    // Si el usuario acepta, enviamos los datos\r\n                    Axios.post(\"http://localhost:3001/registrarCliente\", datos)\r\n                        .then((response) => {\r\n                            Swal.fire({\r\n                                icon: \"success\",\r\n                                title: \"Datos enviados\",\r\n                                text: \"Tus datos han sido enviados correctamente.\",\r\n                                confirmButtonText: \"Vale\"\r\n                            });\r\n    \r\n                            // Limpiar los datos almacenados\r\n                            localStorage.removeItem('datosFormulario');\r\n                        })\r\n                        .catch((error) => {\r\n                            Swal.fire({\r\n                                icon: \"error\",\r\n                                title: \"Error al enviar\",\r\n                                text: \"Hubo un problema al intentar enviar los datos nuevamente. Intenta más tarde.\",\r\n                                confirmButtonText: \"Vale\"\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n    \r\n\r\n    // este es el html visible en la web\r\n    return (\r\n        <div className=\"formulario\">\r\n            <h1>Formulario de Contactos y Visitas</h1>\r\n\r\n            <div className=\"contenedorFormulario\">\r\n                <form onSubmit={addFormulario} className='campos'>\r\n                    {errores.serverError && <div className=\"errorServidor\">{errores.serverError}</div>}\r\n\r\n                    <EntradaTexto label=\"ID Trabajador\" name=\"idTrabajador\" value={datosFormulario.idTrabajador} onChange={handleChange} type=\"number\" placeholder=\"Ej: 1\" error={errores.idTrabajador} />\r\n\r\n                    <EntradaTexto label=\"Nombre completo del contacto\" name=\"nombreContacto\" value={datosFormulario.nombreContacto} onChange={handleChange} type=\"text\" placeholder=\"Ej: Gabriel Martín Ruiz\" error={errores.nombreContacto} />\r\n\r\n                    <EntradaTexto label=\"Dirección del contacto\" name=\"direccionContacto\" value={datosFormulario.direccionContacto} onChange={handleChange} type=\"text\" placeholder=\"Ej: Calle del Sol, 42\" error={errores.direccionContacto} />\r\n\r\n                    <EntradaTexto label=\"Localidad del contacto\" name=\"localidadContacto\" value={datosFormulario.localidadContacto} onChange={handleChange} type=\"text\" placeholder=\"Ej: Mairena de Alcor\" error={errores.localidadContacto} />\r\n\r\n                    <EntradaTexto label=\"Provincia del contacto\" name=\"provinciaContacto\" value={datosFormulario.provinciaContacto} onChange={handleChange} type=\"text\" placeholder=\"Ej: Sevilla\" error={errores.provinciaContacto} />\r\n\r\n                    <EntradaTexto label=\"Teléfono de contacto\" name=\"telefonoContacto\" value={datosFormulario.telefonoContacto} onChange={handleChange} type=\"tel\" placeholder=\"Ej: 666555444\" error={errores.telefonoContacto} />\r\n\r\n                    <EntradaTexto label=\"Correo del contacto\" name=\"correoContacto\" value={datosFormulario.correoContacto} onChange={handleChange} type=\"email\" placeholder=\"Ej: ejemplo@gmail.com\" error={errores.correoContacto} />\r\n\r\n                    <EntradaTexto label=\"Fecha de la visita\" name=\"fechaVisita\" value={datosFormulario.fechaVisita} onChange={handleChange} type=\"date\" placeholder=\"Ej: 17/01/2025\" error={errores.fechaVisita} />\r\n\r\n                    <EntradaTexto label=\"Hora de la visita\" name=\"horaVisita\" value={datosFormulario.horaVisita} onChange={handleChange} type=\"time\" placeholder=\"Ej: 10:22\" error={errores.horaVisita} />\r\n\r\n                    <EntradaTexto label=\"Número de personas en la vivienda\" name=\"numeroPersonas\" value={datosFormulario.numeroPersonas} onChange={handleChange} type=\"number\" placeholder=\"Ej: 4\" error={errores.numeroPersonas} />\r\n\r\n                    <EntradaTexto label=\"Número de decisores\" name=\"numeroDecisores\" value={datosFormulario.numeroDecisores} onChange={handleChange} type=\"number\" placeholder=\"Ej: 2\" error={errores.numeroDecisores} />\r\n\r\n                    <EntradaRadio label=\"¿Tiene bombona?\" name=\"tieneBombona\" options={opcionesRadio} value={datosFormulario.tieneBombona} onChange={handleChange} error={errores.tieneBombona} />\r\n\r\n                    <EntradaRadio label=\"¿Tiene gas?\" name=\"tieneGas\" options={opcionesRadio} value={datosFormulario.tieneGas} onChange={handleChange} error={errores.tieneGas} />\r\n\r\n                    <EntradaRadio label=\"¿Tiene termo eléctrico?\" name=\"tieneTermoElectrico\" options={opcionesRadio} value={datosFormulario.tieneTermoElectrico} onChange={handleChange} error={errores.tieneTermoElectrico} />\r\n\r\n                    <EntradaRadio label=\"¿Tiene placas térmicas?\" name=\"tienePlacasTermicas\" options={opcionesRadio} value={datosFormulario.tienePlacasTermicas} onChange={handleChange} error={errores.tienePlacasTermicas} />\r\n\r\n                    <EntradaTexto label=\"Importe de recibo de luz\" name=\"importeLuz\" value={datosFormulario.importeLuz} onChange={handleChange} type=\"number\" step=\"0.01\" placeholder=\"Ej: 45,50\" error={errores.importeLuz} />\r\n\r\n                    <EntradaTexto label=\"Importe de recibo de gas\" name=\"importeGas\" value={datosFormulario.importeGas} onChange={handleChange} type=\"number\" step=\"0.01\" placeholder=\"Ej: 30,00\" error={errores.importeGas} />\r\n\r\n                    <EntradaTextoArea label=\"Observaciones del contacto\" name=\"observacionesContacto\" value={datosFormulario.observacionesContacto} onChange={handleChange} type=\"text\" placeholder=\"Comenta alguna observación\" />\r\n\r\n                    <button type=\"submit\">Registrar Cliente</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}